Parse tree node: file input
Edges to: 
node new statement
node ENDMARKER

Parse tree node: new statement
Edges to: 
node new statement
node simple statement

Parse tree node: new statement
Edges to: 
node new statement
node simple statement

Parse tree node: new statement
Edges to: 
node new statement
node simple statement

Parse tree node: new statement
Edges to: 
node new statement
node function definition

Parse tree node: function definition
Edges to: 
node def
node build_lps
node parameters
node :
node Suite

Parse tree node: def
Edges to: 

Parse tree node: build_lps
Edges to: 

Parse tree node: parameters
Edges to: 
node (
node Typed Arguments List
node )

Parse tree node: (
Edges to: 

Parse tree node: pattern
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node Plus Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node While Statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node simple statement
node simple statement

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: m
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node len
node Close Trailer

Parse tree node: len
Edges to: 

Parse tree node: Trailer
Edges to: 
node (
node Argument List
node )

Parse tree node: (
Edges to: 

Parse tree node: pattern
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: lps
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Term
Edges to: 
node Factor
node Close Mul Div Ops Factor

Parse tree node: Atom
Edges to: 
node [
node Test List Comparision
node ]

Parse tree node: [
Edges to: 

Parse tree node: 0
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: Close Mul Div Ops Factor
Edges to: 
node *
node Factor

Parse tree node: *
Edges to: 

Parse tree node: m
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: length
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: 0
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: i
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: 1
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: j
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: 1
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node +=

Parse tree node: j
Edges to: 

Parse tree node: +=
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: While Statement
Edges to: 
node while
node Or Test
node :
node Suite

Parse tree node: while
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: i
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node <
node Expression

Parse tree node: <
Edges to: 

Parse tree node: m
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node If Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: If Statement
Edges to: 
node if
node Or Test
node :
node Suite
node Else Colon Suite

Parse tree node: if
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: Atomic Expression
Edges to: 
node pattern
node Close Trailer

Parse tree node: pattern
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: i
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node ==
node Expression

Parse tree node: ==
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node pattern
node Close Trailer

Parse tree node: pattern
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: length
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node Plus Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node simple statement
node simple statement

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node +=

Parse tree node: length
Edges to: 

Parse tree node: +=
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: Atomic Expression
Edges to: 
node lps
node Close Trailer

Parse tree node: lps
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: i
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: length
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node +=

Parse tree node: i
Edges to: 

Parse tree node: +=
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: Else Colon Suite
Edges to: 
node else
node :
node Suite

Parse tree node: else
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node If Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: If Statement
Edges to: 
node if
node Or Test
node :
node Suite
node Else Colon Suite

Parse tree node: if
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: length
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node !=
node Expression

Parse tree node: !=
Edges to: 

Parse tree node: 0
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node simple statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: length
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node lps
node Close Trailer

Parse tree node: lps
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: Arithmatic Expression
Edges to: 
node Term
node Close Plus Minus Term

Parse tree node: length
Edges to: 

Parse tree node: Close Plus Minus Term
Edges to: 
node -
node Term

Parse tree node: -
Edges to: 

Parse tree node: 1
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: Else Colon Suite
Edges to: 
node else
node :
node Suite

Parse tree node: else
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node Plus Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: Plus Statement
Edges to: 
node simple statement
node simple statement

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: Atomic Expression
Edges to: 
node lps
node Close Trailer

Parse tree node: lps
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: i
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: 0
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node +=

Parse tree node: i
Edges to: 

Parse tree node: +=
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: simple statement
Edges to: 
node Return Statement
node NEWLINE

Parse tree node: Return Statement
Edges to: 
node return
node Test List

Parse tree node: return
Edges to: 

Parse tree node: lps
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: function definition
Edges to: 
node def
node kmp_search
node parameters
node :
node Suite

Parse tree node: def
Edges to: 

Parse tree node: kmp_search
Edges to: 

Parse tree node: parameters
Edges to: 
node (
node Typed Arguments List
node )

Parse tree node: (
Edges to: 

Parse tree node: Typed Arguments List
Edges to: 
node text
node close comma condition eqtest

Parse tree node: text
Edges to: 

Parse tree node: close comma condition eqtest
Edges to: 
node ,
node pattern

Parse tree node: ,
Edges to: 

Parse tree node: pattern
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node Plus Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node While Statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node Plus Statement
node simple statement

Parse tree node: Plus Statement
Edges to: 
node simple statement
node simple statement

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: n
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node len
node Close Trailer

Parse tree node: len
Edges to: 

Parse tree node: Trailer
Edges to: 
node (
node Argument List
node )

Parse tree node: (
Edges to: 

Parse tree node: text
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: m
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node len
node Close Trailer

Parse tree node: len
Edges to: 

Parse tree node: Trailer
Edges to: 
node (
node Argument List
node )

Parse tree node: (
Edges to: 

Parse tree node: pattern
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: lps
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node build_lps
node Close Trailer

Parse tree node: build_lps
Edges to: 

Parse tree node: Trailer
Edges to: 
node (
node Argument List
node )

Parse tree node: (
Edges to: 

Parse tree node: pattern
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: Atomic Expression
Edges to: 
node print
node Close Trailer

Parse tree node: print
Edges to: 

Parse tree node: Trailer
Edges to: 
node (
node Argument List
node )

Parse tree node: (
Edges to: 

Parse tree node: \"Reached kmp\"
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: testlist star expression
Edges to: 
node Or Test
node close commatest or star expression

Parse tree node: i
Edges to: 

Parse tree node: close commatest or star expression
Edges to: 
node ,
node Or Test

Parse tree node: ,
Edges to: 

Parse tree node: j
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: testlist star expression
Edges to: 
node Or Test
node close commatest or star expression

Parse tree node: 0
Edges to: 

Parse tree node: close commatest or star expression
Edges to: 
node ,
node Or Test

Parse tree node: ,
Edges to: 

Parse tree node: 0
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: While Statement
Edges to: 
node while
node Or Test
node :
node Suite

Parse tree node: while
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: i
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node <
node Expression

Parse tree node: <
Edges to: 

Parse tree node: n
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node Plus Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: Plus Statement
Edges to: 
node If Statement
node If Statement

Parse tree node: If Statement
Edges to: 
node if
node Or Test
node :
node Suite

Parse tree node: if
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: Atomic Expression
Edges to: 
node pattern
node Close Trailer

Parse tree node: pattern
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: j
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node ==
node Expression

Parse tree node: ==
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node text
node Close Trailer

Parse tree node: text
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: i
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node Plus Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: Plus Statement
Edges to: 
node simple statement
node simple statement

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node +=

Parse tree node: i
Edges to: 

Parse tree node: +=
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node +=

Parse tree node: j
Edges to: 

Parse tree node: +=
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: If Statement
Edges to: 
node if
node Or Test
node :
node Suite
node Close Elif Test Suite

Parse tree node: if
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: j
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node ==
node Expression

Parse tree node: ==
Edges to: 

Parse tree node: m
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node Plus Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: Plus Statement
Edges to: 
node simple statement
node simple statement

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: Atomic Expression
Edges to: 
node print
node Close Trailer

Parse tree node: print
Edges to: 

Parse tree node: Trailer
Edges to: 
node (
node Argument List
node )

Parse tree node: (
Edges to: 

Parse tree node: Argument List
Edges to: 
node Or Test
node Close Comma Argument

Parse tree node: \"Pattern found at index:\"
Edges to: 

Parse tree node: Close Comma Argument
Edges to: 
node ,
node Or Test

Parse tree node: ,
Edges to: 

Parse tree node: Arithmatic Expression
Edges to: 
node Term
node Close Plus Minus Term

Parse tree node: i
Edges to: 

Parse tree node: Close Plus Minus Term
Edges to: 
node -
node Term

Parse tree node: -
Edges to: 

Parse tree node: j
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: j
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node lps
node Close Trailer

Parse tree node: lps
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: Arithmatic Expression
Edges to: 
node Term
node Close Plus Minus Term

Parse tree node: j
Edges to: 

Parse tree node: Close Plus Minus Term
Edges to: 
node -
node Term

Parse tree node: -
Edges to: 

Parse tree node: 1
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: Close Elif Test Suite
Edges to: 
node elif
node Or Test
node :
node Suite

Parse tree node: elif
Edges to: 

Parse tree node: And Test
Edges to: 
node Not Test
node Close And Not Test

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: i
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node <
node Expression

Parse tree node: <
Edges to: 

Parse tree node: n
Edges to: 

Parse tree node: Close And Not Test
Edges to: 
node and
node Not Test

Parse tree node: and
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: Atomic Expression
Edges to: 
node pattern
node Close Trailer

Parse tree node: pattern
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: j
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node !=
node Expression

Parse tree node: !=
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node text
node Close Trailer

Parse tree node: text
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: i
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node If Statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: If Statement
Edges to: 
node if
node Or Test
node :
node Suite
node Else Colon Suite

Parse tree node: if
Edges to: 

Parse tree node: Comparison
Edges to: 
node Expression
node Close Comparison Operator Expression

Parse tree node: j
Edges to: 

Parse tree node: Close Comparison Operator Expression
Edges to: 
node !=
node Expression

Parse tree node: !=
Edges to: 

Parse tree node: 0
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node simple statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: j
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: Atomic Expression
Edges to: 
node lps
node Close Trailer

Parse tree node: lps
Edges to: 

Parse tree node: Trailer
Edges to: 
node [
node Subscript List
node ]

Parse tree node: [
Edges to: 

Parse tree node: Arithmatic Expression
Edges to: 
node Term
node Close Plus Minus Term

Parse tree node: j
Edges to: 

Parse tree node: Close Plus Minus Term
Edges to: 
node -
node Term

Parse tree node: -
Edges to: 

Parse tree node: 1
Edges to: 

Parse tree node: ]
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: Else Colon Suite
Edges to: 
node else
node :
node Suite

Parse tree node: else
Edges to: 

Parse tree node: :
Edges to: 

Parse tree node: Suite
Edges to: 
node NEWLINE
node INDENT
node simple statement
node DEDENT

Parse tree node: NEWLINE
Edges to: 

Parse tree node: INDENT
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node +=

Parse tree node: i
Edges to: 

Parse tree node: +=
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: DEDENT
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: text
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: \"ABABDABACDABABCABAB\"
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: expression statement
Edges to: 
node testlist star expression
node close yield or test star

Parse tree node: pattern
Edges to: 

Parse tree node: close yield or test star
Edges to: 
node =
node testlist star expression

Parse tree node: =
Edges to: 

Parse tree node: \"ABABCABAB\"
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: simple statement
Edges to: 
node expression statement
node NEWLINE

Parse tree node: Atomic Expression
Edges to: 
node kmp_search
node Close Trailer

Parse tree node: kmp_search
Edges to: 

Parse tree node: Trailer
Edges to: 
node (
node Argument List
node )

Parse tree node: (
Edges to: 

Parse tree node: Argument List
Edges to: 
node Or Test
node Close Comma Argument

Parse tree node: text
Edges to: 

Parse tree node: Close Comma Argument
Edges to: 
node ,
node Or Test

Parse tree node: ,
Edges to: 

Parse tree node: pattern
Edges to: 

Parse tree node: )
Edges to: 

Parse tree node: NEWLINE
Edges to: 

Parse tree node: ENDMARKER
Edges to: 

